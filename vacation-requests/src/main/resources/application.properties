mp.openapi.extensions.smallrye.info.title=Human Centric & Database :: Vacation requests
mp.openapi.extensions.smallrye.info.version=0.0.0
mp.openapi.extensions.smallrye.info.description=Automatiko Examples project showcasing human centric workflows and data base records processing

quarkus.swagger-ui.theme=newspaper
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.title=Vacation requests API
quarkus.swagger-ui.footer=Powered by Automatiko

quarkus.automatiko.persistence.type=db
# set remove-at-completion to true if you need to have all data managed by the process to be removed
quarkus.automatiko.persistence.database.remove-at-completion=false

# configure your datasource
quarkus.datasource.db-kind=h2
quarkus.datasource.username=sa
quarkus.datasource.password=
quarkus.datasource.jdbc.url=jdbc:h2:file:./target/data/automatik-store
quarkus.hibernate-orm.database.generation=update
#quarkus.hibernate-orm.log.sql=true
#quarkus.hibernate-orm.log.bind-parameters=true

quarkus.security.users.file.enabled=true
quarkus.security.users.file.users=test-users.properties
quarkus.security.users.file.roles=test-roles.properties
quarkus.security.users.file.realm-name=VacationManagement
quarkus.security.users.file.plain-text=true

#### test configuration
%test.quarkus.hibernate-orm.log.sql=false
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:automatiko-store
# drop and create the database at startup (use `update` to only update the schema)
%test.quarkus.hibernate-orm.database.generation=create-drop

